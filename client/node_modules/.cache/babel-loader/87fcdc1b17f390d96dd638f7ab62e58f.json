{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  items: [],\n  count: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, {\n      payload\n    }) => {\n      const existingItem = state.items.find(item => item._id === payload._id);\n\n      if (existingItem) {\n        state.items.map(item => item._id === existingItem._id ? { ...item,\n          qty: item.qty += payload.qty\n        } : item);\n        state.count += payload.qty;\n      } else {\n        state.items.push(payload);\n        state.count += payload.qty;\n      }\n    },\n    update: (state, {\n      payload\n    }) => {\n      const existingItem = state.items.find(item => item._id === payload._id);\n      const updateQty = payload.qty - existingItem.qty;\n      state.items.map(item => item._id === payload._id ? payload : item);\n      state.count += updateQty;\n    },\n    remove: (state, {\n      payload\n    }) => {\n      state.items.filter(item => item._id !== payload._id);\n      state.count -= payload.qty;\n    }\n  }\n});\nexport const {\n  add,\n  remove\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/cart/cartSlice.ts"],"names":["createSlice","initialState","items","count","cartSlice","name","reducers","add","state","payload","existingItem","find","item","_id","map","qty","push","update","updateQty","remove","filter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,EADmB;AAE1BC,EAAAA,KAAK,EAAE;AAFmB,CAArB;AAKP,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,MADsB;AAE5BJ,EAAAA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC3B,YAAMC,YAAY,GAAGF,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA9C,CAArB;;AACA,UAAIH,YAAJ,EAAkB;AAChBF,QAAAA,KAAK,CAACN,KAAN,CAAYY,GAAZ,CAAgBF,IAAI,IAClBA,IAAI,CAACC,GAAL,KAAaH,YAAY,CAACG,GAA1B,GACI,EAAE,GAAGD,IAAL;AAAWG,UAAAA,GAAG,EAAEH,IAAI,CAACG,GAAL,IAAYN,OAAO,CAACM;AAApC,SADJ,GAEIH,IAHN;AAKAJ,QAAAA,KAAK,CAACL,KAAN,IAAeM,OAAO,CAACM,GAAvB;AACD,OAPD,MAOO;AACLP,QAAAA,KAAK,CAACN,KAAN,CAAYc,IAAZ,CAAiBP,OAAjB;AACAD,QAAAA,KAAK,CAACL,KAAN,IAAeM,OAAO,CAACM,GAAvB;AACD;AACF,KAdO;AAeRE,IAAAA,MAAM,EAAE,CAACT,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC9B,YAAMC,YAAY,GAAGF,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA9C,CAArB;AACA,YAAMK,SAAS,GAAGT,OAAO,CAACM,GAAR,GAAcL,YAAY,CAACK,GAA7C;AACAP,MAAAA,KAAK,CAACN,KAAN,CAAYY,GAAZ,CAAgBF,IAAI,IAClBA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAArB,GACIJ,OADJ,GAEIG,IAHN;AAKAJ,MAAAA,KAAK,CAACL,KAAN,IAAee,SAAf;AACD,KAxBO;AAyBRC,IAAAA,MAAM,EAAE,CAACX,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC9BD,MAAAA,KAAK,CAACN,KAAN,CAAYkB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAAhD;AACAL,MAAAA,KAAK,CAACL,KAAN,IAAeM,OAAO,CAACM,GAAvB;AACD;AA5BO;AAHkB,CAAD,CAA7B;AAmCA,OAAO,MAAM;AAAER,EAAAA,GAAF;AAAOY,EAAAA;AAAP,IAAkBf,SAAS,CAACiB,OAAlC;AAEP,eAAejB,SAAS,CAACkB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  items: [],\n  count: 0\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, { payload }) => {\n      const existingItem = state.items.find(item => item._id === payload._id)\n      if (existingItem) {\n        state.items.map(item => (\n          item._id === existingItem._id\n            ? { ...item, qty: item.qty += payload.qty }\n            : item\n        ))\n        state.count += payload.qty\n      } else {\n        state.items.push(payload)\n        state.count += payload.qty\n      }\n    },\n    update: (state, { payload }) => {\n      const existingItem = state.items.find(item => item._id === payload._id)\n      const updateQty = payload.qty - existingItem.qty\n      state.items.map(item => (\n        item._id === payload._id\n          ? payload\n          : item\n      ))\n      state.count += updateQty\n    },\n    remove: (state, { payload }) => {\n      state.items.filter(item => item._id !== payload._id)\n      state.count -= payload.qty\n    }\n  }\n})\n\nexport const { add, remove } = cartSlice.actions\n\nexport default cartSlice.reducer\n"]},"metadata":{},"sourceType":"module"}
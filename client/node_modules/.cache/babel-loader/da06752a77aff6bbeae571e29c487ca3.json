{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  items: [],\n  count: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, {\n      payload\n    }) => {\n      const existItem = state.items.find(item._id === payload._id);\n\n      if (existItem) {\n        return { ...state,\n          items: state.items.map(x => x.product === existItem.product ? item : x),\n          count: state.count += payload.qty\n        };\n      } else {\n        state.items.push(payload);\n        state.count += payload.qty;\n      }\n    },\n    remove: (state, {\n      payload\n    }) => {\n      state.items.filter(item => item._id !== payload._id);\n    },\n    update: (state, {\n      payload\n    }) => {\n      console.log(payload);\n    }\n  }\n});\nexport const {\n  add,\n  remove,\n  update\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/cart/cartSlice.ts"],"names":["createSlice","initialState","items","count","cartSlice","name","reducers","add","state","payload","existItem","find","item","_id","map","x","product","qty","push","remove","filter","update","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,EADmB;AAE1BC,EAAAA,KAAK,EAAE;AAFmB,CAArB;AAKP,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,MADsB;AAE5BJ,EAAAA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC3B,YAAMC,SAAS,GAAGF,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAAtC,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGF,KADE;AAELN,UAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYY,GAAZ,CAAiBC,CAAD,IACrBA,CAAC,CAACC,OAAF,KAAcN,SAAS,CAACM,OAAxB,GAAkCJ,IAAlC,GAAyCG,CADpC,CAFF;AAKLZ,UAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,IAAeM,OAAO,CAACQ;AALzB,SAAP;AAOD,OARD,MAQO;AACLT,QAAAA,KAAK,CAACN,KAAN,CAAYgB,IAAZ,CAAiBT,OAAjB;AACAD,QAAAA,KAAK,CAACL,KAAN,IAAeM,OAAO,CAACQ,GAAvB;AACD;AACF,KAhBO;AAiBRE,IAAAA,MAAM,EAAE,CAACX,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC9BD,MAAAA,KAAK,CAACN,KAAN,CAAYkB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAAhD;AACD,KAnBO;AAoBRQ,IAAAA,MAAM,EAAE,CAACb,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC9Ba,MAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACD;AAtBO;AAHkB,CAAD,CAA7B;AA6BA,OAAO,MAAM;AAAEF,EAAAA,GAAF;AAAOY,EAAAA,MAAP;AAAeE,EAAAA;AAAf,IAA0BjB,SAAS,CAACoB,OAA1C;AAEP,eAAepB,SAAS,CAACqB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  items: [],\n  count: 0\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, { payload }) => {\n      const existItem = state.items.find(item._id === payload._id)\n\n      if (existItem) {\n        return {\n          ...state,\n          items: state.items.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n          count: state.count += payload.qty\n        }\n      } else {\n        state.items.push(payload)\n        state.count += payload.qty\n      }\n    },\n    remove: (state, { payload }) => {\n      state.items.filter(item => item._id !== payload._id)\n    },\n    update: (state, { payload }) => {\n      console.log(payload)\n    }\n  }\n})\n\nexport const { add, remove, update } = cartSlice.actions\n\nexport default cartSlice.reducer\n"]},"metadata":{},"sourceType":"module"}
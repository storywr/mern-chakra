{"ast":null,"code":"var _jsxFileName = \"/Users/williamstory/Desktop/mern-chakra/frontend/src/pages/AllProducts.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, SimpleGrid } from '@chakra-ui/layout';\nimport { fetchProducts } from '../features/products/productsSlice';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllProducts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    products,\n    status,\n    error\n  } = useSelector(state => state.productsReducer);\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n  return products ? /*#__PURE__*/_jsxDEV(SimpleGrid, {\n    columns: 3,\n    spacing: 10,\n    children: products.map(product => /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => history.push(`/products/${product._id}`),\n      _hover: {\n        boxShadow: '0 8px 12px -1px rgba(0, 0, 0, 0.2), 0 4px 8px -1px rgba(0, 0, 0, 0.12)'\n      },\n      cursor: \"pointer\",\n      boxShadow: \"md\",\n      rounded: \"lg\",\n      p: \"1rem\",\n      minW: \"200px\",\n      minH: \"425px\",\n      maxH: \"425px\",\n      maxW: \"200px\",\n      borderWidth: \"1px\",\n      overflowX: \"wrap\",\n      children: product.name\n    }, product._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"No products available\"\n  }, void 0, false);\n};\n\n_s(AllProducts, \"CBqwyJAGVnde7tCvzxY0dRjldlE=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = AllProducts;\nexport default AllProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/pages/AllProducts.tsx"],"names":["React","useEffect","useDispatch","useSelector","Box","SimpleGrid","fetchProducts","useHistory","AllProducts","dispatch","history","products","status","error","state","productsReducer","map","product","push","_id","boxShadow","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AAEA,SAASC,aAAT,QAA8B,oCAA9B;AAEA,SAASC,UAAT,QAA2B,cAA3B;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAA8BV,WAAW,CAAEW,KAAD,IAAkBA,KAAK,CAACC,eAAzB,CAA/C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,SACEE,QAAQ,gBACN,QAAC,UAAD;AAAY,IAAA,OAAO,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAE,EAAjC;AAAA,cACGA,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACZ,QAAC,GAAD;AACE,MAAA,OAAO,EAAE,MAAMP,OAAO,CAACQ,IAAR,CAAc,aAAYD,OAAO,CAACE,GAAI,EAAtC,CADjB;AAEE,MAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE;AADL,OAFV;AAKE,MAAA,MAAM,EAAC,SALT;AAME,MAAA,SAAS,EAAC,IANZ;AAOE,MAAA,OAAO,EAAC,IAPV;AAQE,MAAA,CAAC,EAAC,MARJ;AASE,MAAA,IAAI,EAAC,OATP;AAUE,MAAA,IAAI,EAAC,OAVP;AAWE,MAAA,IAAI,EAAC,OAXP;AAYE,MAAA,IAAI,EAAC,OAZP;AAaE,MAAA,WAAW,EAAC,KAbd;AAcE,MAAA,SAAS,EAAC,MAdZ;AAAA,gBAiBGH,OAAO,CAACI;AAjBX,OAeOJ,OAAO,CAACE,GAff;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADM,gBAyBN;AAAA;AAAA,mBA1BJ;AA4BD,CArCD;;GAAMX,W;UACaN,W,EACDK,U,EACoBJ,W;;;KAHhCK,W;AAuCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, SimpleGrid } from '@chakra-ui/layout'\n\nimport { fetchProducts } from '../features/products/productsSlice'\nimport { Product, Store } from '../store'\nimport { useHistory } from 'react-router'\n\nconst AllProducts = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { products, status, error } = useSelector((state: Store) => state.productsReducer)\n\n  useEffect(() => {\n    dispatch(fetchProducts())\n  }, [dispatch])\n\n  return (\n    products ? (\n      <SimpleGrid columns={3} spacing={10}>\n        {products.map((product: Product) => (\n          <Box\n            onClick={() => history.push(`/products/${product._id}`)}\n            _hover={{\n              boxShadow: '0 8px 12px -1px rgba(0, 0, 0, 0.2), 0 4px 8px -1px rgba(0, 0, 0, 0.12)'\n            }}\n            cursor='pointer'\n            boxShadow='md'\n            rounded='lg'\n            p='1rem'\n            minW='200px' \n            minH='425px'\n            maxH='425px'\n            maxW='200px'\n            borderWidth='1px'\n            overflowX='wrap'\n            key={product._id}\n          >\n            {product.name}\n          </Box>\n        ))}\n      </SimpleGrid>\n    )\n    : <>No products available</>\n  )\n}\n\nexport default AllProducts\n"]},"metadata":{},"sourceType":"module"}
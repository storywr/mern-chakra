{"ast":null,"code":"var _jsxFileName = \"/Users/williamstory/Desktop/mern-chakra/frontend/src/pages/Product.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Heading, Image, SimpleGrid, Spinner } from '@chakra-ui/react';\nimport Alert from '../components/Alert';\nimport { fetchProduct } from '../features/products/productSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    product,\n    status,\n    error\n  } = useSelector(state => state.productReducer);\n  useEffect(() => {\n    dispatch(fetchProduct(id));\n  }, [dispatch]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  return product ? /*#__PURE__*/_jsxDEV(SimpleGrid, {\n    columns: [3, 1, 1],\n    spacing: \"30px\",\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      src: product.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      width: \"300px\",\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [\"Price: $\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [\"Status: \", product.countInStock > 0 ? 'In Stock' : 'Out of Stock']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n    size: \"lg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Product, \"2Uqfa80cEe2qNkm9dxhbqwCjd5g=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/pages/Product.tsx"],"names":["React","useEffect","useParams","useDispatch","useSelector","Box","Heading","Image","SimpleGrid","Spinner","Alert","fetchProduct","Product","id","dispatch","product","status","error","state","productReducer","image","name","price","countInStock"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,UAA9B,EAA0CC,OAA1C,QAAyD,kBAAzD;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,YAAT,QAA6B,mCAA7B;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAcX,SAAS,EAA7B;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAA6Bb,WAAW,CAAEc,KAAD,IAAkBA,KAAK,CAACC,cAAzB,CAA9C;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACH,YAAY,CAACE,EAAD,CAAb,CAAR;AACD,GAFQ,EAEN,CAACC,QAAD,CAFM,CAAT;;AAIA,MAAIG,KAAJ,EAAW;AACT,wBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SACEF,OAAO,gBACL,QAAC,UAAD;AAAY,IAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArB;AAAgC,IAAA,OAAO,EAAC,MAAxC;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,OAAO,CAACK;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,IAAd;AAAA,kBAAoBL,OAAO,CAACM;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAA,+BAAcN,OAAO,CAACO,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAA,+BAAcP,OAAO,CAACQ,YAAR,GAAuB,CAAvB,GAA2B,UAA3B,GAAwC,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAWL,QAAC,OAAD;AAAS,IAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,UAZJ;AAcD,CA3BD;;GAAMX,O;UACgBV,S,EACHC,W,EACkBC,W;;;KAH/BQ,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, Heading, Image, SimpleGrid, Spinner } from '@chakra-ui/react'\n\nimport Alert from '../components/Alert'\nimport { fetchProduct } from '../features/products/productSlice'\nimport { Store } from '../store'\n\nconst Product = () => {\n  const { id }: any = useParams()\n  const dispatch = useDispatch()\n  const { product, status, error } = useSelector((state: Store) => state.productReducer)\n\n  useEffect(() => {\n    dispatch(fetchProduct(id))\n  }, [dispatch])\n\n  if (error) {\n    return <Alert />\n  }\n\n  return (\n    product ?\n      <SimpleGrid columns={[3, 1, 1]} spacing='30px'>\n        <Image src={product.image} />\n        <Box width='300px'>\n          <Heading size='lg'>{product.name}</Heading>\n        </Box>\n        <Box>\n          <Box>Price: ${product.price}</Box>\n          <Box>Status: {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Box>\n        </Box>\n      </SimpleGrid>\n    : <Spinner size='lg' />\n  )\n}\n\nexport default Product\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const initialState = {\n  products: [],\n  status: 'idle',\n  error: null\n}; // Fetching products\n\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const res = await axios.get('/api/products');\n  return res.data;\n}); // A slice for products with our three reducers\n\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchProducts.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchProducts.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.products = state.products.concat(action.payload);\n    },\n    [fetchProducts.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {} = productsSlice.actions; // The reducer\n\nexport default productsSlice.reducer;","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/products/productsSlice.ts"],"names":["createAsyncThunk","createSlice","axios","initialState","products","status","error","fetchProducts","res","get","data","productsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","concat","payload","rejected","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,MAAM,EAAE,MAFkB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAArB,C,CAMP;;AACA,OAAO,MAAMC,aAAa,GAAGP,gBAAgB,CAAC,wBAAD,EAA2B,YAAY;AAClF,QAAMQ,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAV,CAAlB;AACA,SAAOD,GAAG,CAACE,IAAX;AACD,CAH4C,CAAtC,C,CAKP;;AACA,MAAMC,aAAa,GAAGV,WAAW,CAAC;AAChCW,EAAAA,IAAI,EAAE,UAD0B;AAEhCT,EAAAA,YAFgC;AAGhCU,EAAAA,QAAQ,EAAE,EAHsB;AAIhCC,EAAAA,aAAa,EAAE;AACb,KAACP,aAAa,CAACQ,OAAf,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACX,MAAN,GAAe,SAAf;AACD,KAHY;AAIb,KAACE,aAAa,CAACW,SAAf,GAA2B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC5CD,MAAAA,KAAK,CAACX,MAAN,GAAe,WAAf;AACAW,MAAAA,KAAK,CAACZ,QAAN,GAAiBY,KAAK,CAACZ,QAAN,CAAee,MAAf,CAAsBF,MAAM,CAACG,OAA7B,CAAjB;AACD,KAPY;AAQb,KAACb,aAAa,CAACc,QAAf,GAA0B,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACX,MAAN,GAAe,QAAf;AACAW,MAAAA,KAAK,CAACV,KAAN,GAAcW,MAAM,CAACG,OAArB;AACD;AAXY;AAJiB,CAAD,CAAjC,C,CAmBA;;AACA,OAAO,MAAM,KAAMT,aAAa,CAACW,OAA1B,C,CAEP;;AACA,eAAeX,aAAa,CAACY,OAA7B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nexport const initialState = {\n  products: [],\n  status: 'idle',\n  error: null\n}\n\n// Fetching products\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const res = await axios.get('/api/products')\n  return res.data\n})\n\n// A slice for products with our three reducers\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchProducts.pending]: (state, action) => {\n      state.status = 'loading'\n    },\n    [fetchProducts.fulfilled]: (state, action) => {\n      state.status = 'succeeded'\n      state.products = state.products.concat(action.payload)\n    },\n    [fetchProducts.rejected]: (state, action) => {\n      state.status = 'failed'\n      state.error = action.payload\n    },\n  }\n})\n\n// Three actions generated from the slice\nexport const { } = productsSlice.actions\n\n// The reducer\nexport default productsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}
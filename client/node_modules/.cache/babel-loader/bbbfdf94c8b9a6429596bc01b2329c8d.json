{"ast":null,"code":"var _jsxFileName = \"/Users/williamstory/Desktop/mern-chakra/frontend/src/pages/AllProducts.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, SimpleGrid } from '@chakra-ui/layout';\nimport { fetchProducts } from '../features/products/productsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllProducts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    products,\n    status,\n    error\n  } = useSelector(state => state.productsReducer);\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n  return products ? /*#__PURE__*/_jsxDEV(SimpleGrid, {\n    columns: 3,\n    spacing: 10,\n    children: products.map(product => /*#__PURE__*/_jsxDEV(Box, {\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"No products available\"\n  }, void 0, false);\n};\n\n_s(AllProducts, \"4Ujrn09kO30Dk8Rm5JUzwUXtvr4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AllProducts;\nexport default AllProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/pages/AllProducts.tsx"],"names":["React","useEffect","useDispatch","useSelector","Box","SimpleGrid","fetchProducts","AllProducts","dispatch","products","status","error","state","productsReducer","map","product","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AAEA,SAASC,aAAT,QAA8B,oCAA9B;;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAA8BR,WAAW,CAAES,KAAD,IAAkBA,KAAK,CAACC,eAAzB,CAA/C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACF,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAIA,SACEC,QAAQ,gBACN,QAAC,UAAD;AAAY,IAAA,OAAO,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAE,EAAjC;AAAA,cACGA,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACZ,QAAC,GAAD;AAAA,gBACGA,OAAO,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADM,gBASN;AAAA;AAAA,mBAVJ;AAYD,CApBD;;GAAMT,W;UACaL,W,EACmBC,W;;;KAFhCI,W;AAsBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, SimpleGrid } from '@chakra-ui/layout'\n\nimport { fetchProducts } from '../features/products/productsSlice'\nimport { Product, Store } from '../store'\n\nconst AllProducts = () => {\n  const dispatch = useDispatch()\n  const { products, status, error } = useSelector((state: Store) => state.productsReducer)\n\n  useEffect(() => {\n    dispatch(fetchProducts())\n  }, [dispatch])\n\n  return (\n    products ? (\n      <SimpleGrid columns={3} spacing={10}>\n        {products.map((product: Product) => (\n          <Box>\n            {product.name}\n          </Box>\n        ))}\n      </SimpleGrid>\n    )\n    : <>No products available</>\n  )\n}\n\nexport default AllProducts\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createEntityAdapter } from '@reduxjs/toolkit';\nimport { createSelector, createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, {\n      payload\n    }) => {\n      const existingItem = state.items.find(item => item.product._id === payload.product._id);\n\n      if (existingItem) {\n        const items = state.items.map(item => item.product._id === existingItem.product._id ? { ...payload,\n          qty: payload.qty + item.qty\n        } : item);\n        return { ...state,\n          items\n        };\n      } else {\n        return { ...state,\n          items: [...state.items, payload]\n        };\n      }\n    },\n    remove: (state, {\n      payload\n    }) => {\n      state.items.filter(item => item._id !== payload._id);\n    },\n    update: (state, {\n      payload\n    }) => {\n      const existingItem = state.items.find(item => item.product._id === payload.product._id);\n      state.items.map(item => item.product._id === existingItem.product._id ? payload : item);\n    }\n  }\n});\nexport const {\n  add,\n  remove\n} = cartSlice.actions;\nexport const selectCount = createSelector(state => state.cart.items, items => {\n  if (items.length > 0) {\n    const count = items.reduce((total, item) => total + item.qty, 0);\n    return count;\n  } else {\n    return 0;\n  }\n});\nconst itemsAdapter = createEntityAdapter();\nexport const {\n  selectById: selectItemById,\n  selectIds: selectItemIds,\n  selectEntities: selectItemEntities,\n  selectAll: selectAllItems,\n  selectTotal: selectTotalItems\n} = itemsAdapter.getSelectors(state => state.cart);\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/cart/cartSlice.ts"],"names":["createEntityAdapter","createSelector","createSlice","initialState","items","cartSlice","name","reducers","add","state","payload","existingItem","find","item","product","_id","map","qty","remove","filter","update","actions","selectCount","cart","length","count","reduce","total","itemsAdapter","selectById","selectItemById","selectIds","selectItemIds","selectEntities","selectItemEntities","selectAll","selectAllItems","selectTotal","selectTotalItems","getSelectors","reducer"],"mappings":"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","sourcesContent":["import { createEntityAdapter } from '@reduxjs/toolkit';\nimport { createSelector, createSlice } from '@reduxjs/toolkit'\n\nexport const initialState = {\n  items: []\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, { payload }) => {\n      const existingItem = state.items.find(item => item.product._id === payload.product._id)\n\n      if (existingItem) {\n        const items = state.items.map(item => (\n          item.product._id === existingItem.product._id\n            ? { ...payload, qty: payload.qty + item.qty }\n            : item\n        ))\n        return {\n          ...state,\n          items\n        }\n      } else {\n        return {\n          ...state,\n          items: [...state.items, payload]\n        }\n      }\n    },\n    remove: (state, { payload }) => {\n      state.items.filter(item => item._id !== payload._id)\n    },\n    update: (state, { payload }) => {\n      const existingItem = state.items.find(item => item.product._id === payload.product._id)\n\n      state.items.map(item => (\n        item.product._id === existingItem.product._id\n          ? payload\n          : item\n      ))\n    }\n  }\n})\n\nexport const { add, remove } = cartSlice.actions\n\nexport const selectCount = createSelector(\n  state => state.cart.items,\n  items => {\n    if (items.length > 0) {\n      const count = items.reduce((total, item) => total + item.qty, 0)\n      return count\n    } else {\n      return 0\n    }\n  }\n)\n\nconst itemsAdapter = createEntityAdapter()\n\nexport const {\n  selectById: selectItemById,\n  selectIds: selectItemIds,\n  selectEntities: selectItemEntities,\n  selectAll: selectAllItems,\n  selectTotal: selectTotalItems\n} = itemsAdapter.getSelectors(state => state.cart)\n\nexport default cartSlice.reducer\n"]},"metadata":{},"sourceType":"module"}
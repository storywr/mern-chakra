{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const initialState = {\n  products: [],\n  status: 'idle',\n  error: null\n}; // Fetching products\n\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const res = await axios.get('/api/products');\n  return res.data;\n}); // A slice for products\n\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = 'loading';\n    }), builder.addCase(fetchProducts.fulfilled, (state, {\n      payload\n    }) => {\n      state.status = 'succeeded';\n      state.products = payload;\n    }), builder.addCase(fetchProducts.rejected, (state, {\n      payload\n    }) => {\n      state.status = 'failed';\n      state.error = payload;\n    });\n  }\n}); // Three actions generated from the slice\n\nexport const {} = productsSlice.actions; // The reducer\n\nexport default productsSlice.reducer;","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/products/productsSlice.ts"],"names":["createAsyncThunk","createSlice","axios","initialState","products","status","error","fetchProducts","res","get","data","productsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,MAAM,EAAE,MAFkB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAArB,C,CAMP;;AACA,OAAO,MAAMC,aAAkB,GAAGP,gBAAgB,CAAC,wBAAD,EAA2B,YAAY;AACvF,QAAMQ,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAV,CAAlB;AACA,SAAOD,GAAG,CAACE,IAAX;AACD,CAHiD,CAA3C,C,CAKP;;AACA,MAAMC,aAAa,GAAGV,WAAW,CAAC;AAChCW,EAAAA,IAAI,EAAE,UAD0B;AAEhCT,EAAAA,YAFgC;AAGhCU,EAAAA,QAAQ,EAAE,EAHsB;AAIhCC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBT,aAAa,CAACU,OAA9B,EAAuCC,KAAK,IAAI;AAC9CA,MAAAA,KAAK,CAACb,MAAN,GAAe,SAAf;AACD,KAFD,GAGEU,OAAO,CAACC,OAAR,CAAgBT,aAAa,CAACY,SAA9B,EAAyC,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AAC/DF,MAAAA,KAAK,CAACb,MAAN,GAAe,WAAf;AACAa,MAAAA,KAAK,CAACd,QAAN,GAAiBgB,OAAjB;AACD,KAHD,CAHF,EAOEL,OAAO,CAACC,OAAR,CAAgBT,aAAa,CAACc,QAA9B,EAAwC,CAACH,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AAC9DF,MAAAA,KAAK,CAACb,MAAN,GAAe,QAAf;AACAa,MAAAA,KAAK,CAACZ,KAAN,GAAcc,OAAd;AACD,KAHD,CAPF;AAWD;AAhB+B,CAAD,CAAjC,C,CAmBA;;AACA,OAAO,MAAM,KAAMT,aAAa,CAACW,OAA1B,C,CAEP;;AACA,eAAeX,aAAa,CAACY,OAA7B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nexport const initialState = {\n  products: [],\n  status: 'idle',\n  error: null\n}\n\n// Fetching products\nexport const fetchProducts: any = createAsyncThunk('products/fetchProducts', async () => {\n  const res = await axios.get('/api/products')\n  return res.data\n})\n\n// A slice for products\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = 'loading'\n    }),\n      builder.addCase(fetchProducts.fulfilled, (state, { payload }) => {\n        state.status = 'succeeded'\n        state.products = payload\n      }),\n      builder.addCase(fetchProducts.rejected, (state, { payload }) => {\n        state.status = 'failed'\n        state.error = payload\n      })\n  }\n})\n\n// Three actions generated from the slice\nexport const { } = productsSlice.actions\n\n// The reducer\nexport default productsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}
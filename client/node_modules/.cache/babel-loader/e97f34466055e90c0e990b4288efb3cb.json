{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  items: [],\n  count: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, {\n      payload\n    }) => {\n      const existingItem = state.items.find(item => item._id === payload._id);\n\n      if (existingItem) {\n        return {\n          count: state.count += payload.qty,\n          items: state.items.map(item => item._id === existingItem._id ? payload : item)\n        };\n      }\n\n      state.items.push(payload);\n      state.count += payload.qty;\n    },\n    remove: (state, {\n      payload\n    }) => {\n      state.items.filter(item => item._id !== payload._id);\n    },\n    update: (state, {\n      payload\n    }) => {\n      console.log(payload);\n    }\n  }\n});\nexport const {\n  add,\n  remove,\n  update\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/cart/cartSlice.ts"],"names":["createSlice","initialState","items","count","cartSlice","name","reducers","add","state","payload","existingItem","find","item","_id","qty","map","push","remove","filter","update","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,EADmB;AAE1BC,EAAAA,KAAK,EAAE;AAFmB,CAArB;AAKP,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,MADsB;AAE5BJ,EAAAA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC3B,YAAMC,YAAY,GAAGF,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA9C,CAArB;;AACA,UAAIH,YAAJ,EAAkB;AAChB,eAAO;AACLP,UAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,IAAeM,OAAO,CAACK,GADzB;AAELZ,UAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYa,GAAZ,CAAgBH,IAAI,IACzBA,IAAI,CAACC,GAAL,KAAaH,YAAY,CAACG,GAA1B,GAAgCJ,OAAhC,GAA0CG,IADrC;AAFF,SAAP;AAMD;;AACDJ,MAAAA,KAAK,CAACN,KAAN,CAAYc,IAAZ,CAAiBP,OAAjB;AACAD,MAAAA,KAAK,CAACL,KAAN,IAAeM,OAAO,CAACK,GAAvB;AACD,KAbO;AAcRG,IAAAA,MAAM,EAAE,CAACT,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC9BD,MAAAA,KAAK,CAACN,KAAN,CAAYgB,MAAZ,CAAmBN,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAAhD;AACD,KAhBO;AAiBRM,IAAAA,MAAM,EAAE,CAACX,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC9BW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACD;AAnBO;AAHkB,CAAD,CAA7B;AA0BA,OAAO,MAAM;AAAEF,EAAAA,GAAF;AAAOU,EAAAA,MAAP;AAAeE,EAAAA;AAAf,IAA0Bf,SAAS,CAACkB,OAA1C;AAEP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  items: [],\n  count: 0\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, { payload }) => {\n      const existingItem = state.items.find(item => item._id === payload._id)\n      if (existingItem) {\n        return {\n          count: state.count += payload.qty,\n          items: state.items.map(item => (\n            item._id === existingItem._id ? payload : item\n          ))\n        }\n      }\n      state.items.push(payload)\n      state.count += payload.qty\n    },\n    remove: (state, { payload }) => {\n      state.items.filter(item => item._id !== payload._id)\n    },\n    update: (state, { payload }) => {\n      console.log(payload)\n    }\n  }\n})\n\nexport const { add, remove, update } = cartSlice.actions\n\nexport default cartSlice.reducer\n"]},"metadata":{},"sourceType":"module"}
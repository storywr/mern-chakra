{"ast":null,"code":"var _jsxFileName = \"/Users/williamstory/Desktop/mern-chakra/frontend/src/pages/AllProducts.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProducts } from '../features/products/productsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllProducts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    products,\n    status,\n    error\n  } = useSelector(state => state.productsReducer);\n  console.log(products);\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllProducts, \"4Ujrn09kO30Dk8Rm5JUzwUXtvr4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AllProducts;\nexport default AllProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/pages/AllProducts.tsx"],"names":["React","useEffect","useDispatch","useSelector","fetchProducts","AllProducts","dispatch","products","status","error","state","productsReducer","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,aAAT,QAA8B,oCAA9B;;;AAYA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAA8BN,WAAW,CAAEO,KAAD,IAAkBA,KAAK,CAACC,eAAzB,CAA/C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACF,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfD;;GAAMD,W;UACaH,W,EACmBC,W;;;KAFhCE,W;AAiBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { fetchProducts } from '../features/products/productsSlice'\n\ninterface ProductReducer {\n  products: [],\n  status: any,\n  error: any\n}\n\ninterface Store {\n  productsReducer: ProductReducer\n}\n\nconst AllProducts = () => {\n  const dispatch = useDispatch()\n  const { products, status, error } = useSelector((state: Store) => state.productsReducer)\n\n  console.log(products)\n\n  useEffect(() => {\n    dispatch(fetchProducts())\n  }, [dispatch])\n\n  return (\n    <div>\n      test\n    </div>\n  )\n}\n\nexport default AllProducts\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const initialState = {\n  product: null,\n  status: 'idle',\n  error: null\n}; // Fetching product\n\nexport const fetchProduct = createAsyncThunk('product/fetchProduct', async productId => {\n  const res = await axios.get(`/api/products/${productId}`);\n  return res.data;\n}); // A slice for product\n\nconst productSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchProduct.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchProduct.fulfilled]: (state, {\n      payload\n    }) => {\n      state.status = 'succeeded';\n      state.product = payload;\n    },\n    [fetchProduct.rejected]: (state, {\n      payload\n    }) => {\n      state.status = 'failed';\n      state.error = payload;\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {} = productSlice.actions; // The reducer\n\nexport default productSlice.reducer;","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/products/productSlice.ts"],"names":["createAsyncThunk","createSlice","axios","initialState","product","status","error","fetchProduct","productId","res","get","data","productSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,IADiB;AAE1BC,EAAAA,MAAM,EAAE,MAFkB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAArB,C,CAMP;;AACA,OAAO,MAAMC,YAAY,GAAGP,gBAAgB,CAAC,sBAAD,EAAyB,MAAOQ,SAAP,IAA6B;AAChG,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,iBAAgBF,SAAU,EAArC,CAAlB;AACA,SAAOC,GAAG,CAACE,IAAX;AACD,CAH2C,CAArC,C,CAKP;;AACA,MAAMC,YAAY,GAAGX,WAAW,CAAC;AAC/BY,EAAAA,IAAI,EAAE,UADyB;AAE/BV,EAAAA,YAF+B;AAG/BW,EAAAA,QAAQ,EAAE,EAHqB;AAI/BC,EAAAA,aAAa,EAAE;AACb,KAACR,YAAY,CAACS,OAAd,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACZ,MAAN,GAAe,SAAf;AACD,KAHY;AAIb,KAACE,YAAY,CAACY,SAAd,GAA0B,CAACF,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,KAAwB;AAChDH,MAAAA,KAAK,CAACZ,MAAN,GAAe,WAAf;AACAY,MAAAA,KAAK,CAACb,OAAN,GAAgBgB,OAAhB;AACD,KAPY;AAQb,KAACb,YAAY,CAACc,QAAd,GAAyB,CAACJ,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,KAAwB;AAC/CH,MAAAA,KAAK,CAACZ,MAAN,GAAe,QAAf;AACAY,MAAAA,KAAK,CAACX,KAAN,GAAcc,OAAd;AACD;AAXY;AAJgB,CAAD,CAAhC,C,CAmBA;;AACA,OAAO,MAAM,KAAMR,YAAY,CAACU,OAAzB,C,CAEP;;AACA,eAAeV,YAAY,CAACW,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nexport const initialState = {\n  product: null,\n  status: 'idle',\n  error: null\n}\n\n// Fetching product\nexport const fetchProduct = createAsyncThunk('product/fetchProduct', async (productId: string) => {\n  const res = await axios.get(`/api/products/${productId}`)\n  return res.data\n})\n\n// A slice for product\nconst productSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchProduct.pending]: (state, action) => {\n      state.status = 'loading'\n    },\n    [fetchProduct.fulfilled]: (state, { payload }) => {\n      state.status = 'succeeded'\n      state.product = payload\n    },\n    [fetchProduct.rejected]: (state, { payload }) => {\n      state.status = 'failed'\n      state.error = payload\n    }\n  }\n})\n\n// Three actions generated from the slice\nexport const { } = productSlice.actions\n\n// The reducer\nexport default productSlice.reducer\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  products: []\n}; // A slice for products with our three reducers\n\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    getProducts: state => {\n      state.loading = true;\n    },\n    getProductsSuccess: (state, {\n      payload\n    }) => {\n      state.products = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    getProductsFailure: state => {\n      state.loading = false;\n      state.hasErrors = true;\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {\n  getProducts,\n  getProductsSuccess,\n  getProductsFailure\n} = productsSlice.actions; // The reducer\n\nexport default productsSlice.reducer; // Asynchronous thunk action\n\nexport const fetchProducts = () => {\n  return async dispatch => {\n    dispatch(getProducts());\n\n    try {\n      const response = await axios.get('/api/products');\n      const data = await response.json();\n      dispatch(getProductsSuccess(data.products));\n    } catch (error) {\n      dispatch(getProductsFailure());\n    }\n  };\n};","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/products/productsSlice.ts"],"names":["createSlice","axios","initialState","loading","hasErrors","products","productsSlice","name","reducers","getProducts","state","getProductsSuccess","payload","getProductsFailure","actions","reducer","fetchProducts","dispatch","response","get","data","json","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,SAAS,EAAE,KAFe;AAG1BC,EAAAA,QAAQ,EAAE;AAHgB,CAArB,C,CAMP;;AACA,MAAMC,aAAa,GAAGN,WAAW,CAAC;AAChCO,EAAAA,IAAI,EAAE,UAD0B;AAEhCL,EAAAA,YAFgC;AAGhCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAEC,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACD,KAHO;AAIRQ,IAAAA,kBAAkB,EAAE,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AAC1CF,MAAAA,KAAK,CAACL,QAAN,GAAiBO,OAAjB;AACAF,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACD,KARO;AASRS,IAAAA,kBAAkB,EAAEH,KAAK,IAAI;AAC3BA,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD;AAZO;AAHsB,CAAD,CAAjC,C,CAmBA;;AACA,OAAO,MAAM;AAAEK,EAAAA,WAAF;AAAeE,EAAAA,kBAAf;AAAmCE,EAAAA;AAAnC,IAA0DP,aAAa,CAACQ,OAA9E,C,CAEP;;AACA,eAAeR,aAAa,CAACS,OAA7B,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;;AAEA,QAAI;AACF,YAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,eAAV,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAJ,MAAAA,QAAQ,CAACN,kBAAkB,CAACS,IAAI,CAACf,QAAN,CAAnB,CAAR;AACD,KALD,CAKE,OAAOiB,KAAP,EAAc;AACdL,MAAAA,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR;AACD;AACF,GAXD;AAYD,CAbM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  products: [],\n}\n\n// A slice for products with our three reducers\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    getProducts: state => {\n      state.loading = true\n    },\n    getProductsSuccess: (state, { payload }) => {\n      state.products = payload\n      state.loading = false\n      state.hasErrors = false\n    },\n    getProductsFailure: state => {\n      state.loading = false\n      state.hasErrors = true\n    },\n  },\n})\n\n// Three actions generated from the slice\nexport const { getProducts, getProductsSuccess, getProductsFailure } = productsSlice.actions\n\n// The reducer\nexport default productsSlice.reducer\n\n// Asynchronous thunk action\nexport const fetchProducts = () => {\n  return async dispatch => {\n    dispatch(getProducts())\n\n    try {\n      const response = await axios.get('/api/products')\n      const data = await response.json()\n\n      dispatch(getProductsSuccess(data.products))\n    } catch (error) {\n      dispatch(getProductsFailure())\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
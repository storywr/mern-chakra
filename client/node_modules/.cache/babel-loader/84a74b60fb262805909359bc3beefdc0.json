{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  items: [],\n  count: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, {\n      payload\n    }) => {\n      const existItem = state.items.find(item => item._id === payload._id);\n\n      if (existItem) {\n        return { ...state,\n          items: state.items.map(item => item._id === existItem._id ? item : item),\n          count: state.count += payload.qty\n        };\n      } else {\n        state.items.push(payload);\n        state.count += payload.qty;\n      }\n    },\n    remove: (state, {\n      payload\n    }) => {\n      state.items.filter(item => item._id !== payload._id);\n    },\n    update: (state, {\n      payload\n    }) => {\n      console.log(payload);\n    }\n  }\n});\nexport const {\n  add,\n  remove,\n  update\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/cart/cartSlice.ts"],"names":["createSlice","initialState","items","count","cartSlice","name","reducers","add","state","payload","existItem","find","item","_id","map","qty","push","remove","filter","update","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,EADmB;AAE1BC,EAAAA,KAAK,EAAE;AAFmB,CAArB;AAKP,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,MADsB;AAE5BJ,EAAAA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC3B,YAAMC,SAAS,GAAGF,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA9C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGF,KADE;AAELN,UAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYY,GAAZ,CAAgBF,IAAI,IACzBA,IAAI,CAACC,GAAL,KAAaH,SAAS,CAACG,GAAvB,GAA6BD,IAA7B,GAAoCA,IAD/B,CAFF;AAKLT,UAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,IAAeM,OAAO,CAACM;AALzB,SAAP;AAOD,OARD,MAQO;AACLP,QAAAA,KAAK,CAACN,KAAN,CAAYc,IAAZ,CAAiBP,OAAjB;AACAD,QAAAA,KAAK,CAACL,KAAN,IAAeM,OAAO,CAACM,GAAvB;AACD;AACF,KAhBO;AAiBRE,IAAAA,MAAM,EAAE,CAACT,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC9BD,MAAAA,KAAK,CAACN,KAAN,CAAYgB,MAAZ,CAAmBN,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAAhD;AACD,KAnBO;AAoBRM,IAAAA,MAAM,EAAE,CAACX,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC9BW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACD;AAtBO;AAHkB,CAAD,CAA7B;AA6BA,OAAO,MAAM;AAAEF,EAAAA,GAAF;AAAOU,EAAAA,MAAP;AAAeE,EAAAA;AAAf,IAA0Bf,SAAS,CAACkB,OAA1C;AAEP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  items: [],\n  count: 0\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, { payload }) => {\n      const existItem = state.items.find(item => item._id === payload._id)\n\n      if (existItem) {\n        return {\n          ...state,\n          items: state.items.map(item =>\n            item._id === existItem._id ? item : item\n          ),\n          count: state.count += payload.qty\n        }\n      } else {\n        state.items.push(payload)\n        state.count += payload.qty\n      }\n    },\n    remove: (state, { payload }) => {\n      state.items.filter(item => item._id !== payload._id)\n    },\n    update: (state, { payload }) => {\n      console.log(payload)\n    }\n  }\n})\n\nexport const { add, remove, update } = cartSlice.actions\n\nexport default cartSlice.reducer\n"]},"metadata":{},"sourceType":"module"}
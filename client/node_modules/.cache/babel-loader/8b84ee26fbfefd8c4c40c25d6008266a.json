{"ast":null,"code":"import { createSelector, createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, {\n      payload\n    }) => {\n      const existingItem = state.items.find(item => item.product._id === payload.product._id);\n\n      if (existingItem) {\n        state.items.map(item => item.product._id === existingItem.product._id ? payload : item);\n      } else {\n        return { ...state,\n          items: [...state.items, payload]\n        };\n      }\n    },\n    remove: (state, {\n      payload\n    }) => {\n      state.items.filter(item => item._id !== payload._id);\n    }\n  }\n});\nexport const {\n  add,\n  remove\n} = cartSlice.actions;\nexport const selectCount = createSelector(state => state.items, items => {\n  console.log(items);\n  items === null || items === void 0 ? void 0 : items.reduce((x, y) => x.qty + y.qty);\n  return 0;\n});\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/williamstory/Desktop/mern-chakra/frontend/src/features/cart/cartSlice.ts"],"names":["createSelector","createSlice","initialState","items","cartSlice","name","reducers","add","state","payload","existingItem","find","item","product","_id","map","remove","filter","actions","selectCount","console","log","reduce","x","y","qty","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE;AADmB,CAArB;AAIP,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC5BI,EAAAA,IAAI,EAAE,MADsB;AAE5BH,EAAAA,YAF4B;AAG5BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC3B,YAAMC,YAAY,GAAGF,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,OAAL,CAAaC,GAAb,KAAqBL,OAAO,CAACI,OAAR,CAAgBC,GAA9D,CAArB;;AAEA,UAAIJ,YAAJ,EAAkB;AAChBF,QAAAA,KAAK,CAACL,KAAN,CAAYY,GAAZ,CAAgBH,IAAI,IAClBA,IAAI,CAACC,OAAL,CAAaC,GAAb,KAAqBJ,YAAY,CAACG,OAAb,CAAqBC,GAA1C,GACIL,OADJ,GAEIG,IAHN;AAKD,OAND,MAMO;AACL,eAAO,EACL,GAAGJ,KADE;AAELL,UAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,OAAjB;AAFF,SAAP;AAID;AACF,KAhBO;AAiBRO,IAAAA,MAAM,EAAE,CAACR,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC9BD,MAAAA,KAAK,CAACL,KAAN,CAAYc,MAAZ,CAAmBL,IAAI,IAAIA,IAAI,CAACE,GAAL,KAAaL,OAAO,CAACK,GAAhD;AACD;AAnBO;AAHkB,CAAD,CAA7B;AA0BA,OAAO,MAAM;AAAEP,EAAAA,GAAF;AAAOS,EAAAA;AAAP,IAAkBZ,SAAS,CAACc,OAAlC;AAEP,OAAO,MAAMC,WAAW,GAAGnB,cAAc,CACvCQ,KAAK,IAAIA,KAAK,CAACL,KADwB,EAEvCA,KAAK,IAAI;AACPiB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACAA,EAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEmB,MAAP,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,GAAF,GAAQD,CAAC,CAACC,GAAlC;AACA,SAAO,CAAP;AACD,CANsC,CAAlC;AASP,eAAerB,SAAS,CAACsB,OAAzB","sourcesContent":["import { createSelector, createSlice } from \"@reduxjs/toolkit\"\n\nexport const initialState = {\n  items: []\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (state, { payload }) => {\n      const existingItem = state.items.find(item => item.product._id === payload.product._id)\n\n      if (existingItem) {\n        state.items.map(item => (\n          item.product._id === existingItem.product._id\n            ? payload\n            : item\n        ))\n      } else {\n        return {\n          ...state,\n          items: [...state.items, payload]\n        }\n      }\n    },\n    remove: (state, { payload }) => {\n      state.items.filter(item => item._id !== payload._id)\n    }\n  }\n})\n\nexport const { add, remove } = cartSlice.actions\n\nexport const selectCount = createSelector(\n  state => state.items,\n  items => {\n    console.log(items)\n    items?.reduce((x, y) => x.qty + y.qty)\n    return 0\n  }\n)\n\nexport default cartSlice.reducer\n"]},"metadata":{},"sourceType":"module"}